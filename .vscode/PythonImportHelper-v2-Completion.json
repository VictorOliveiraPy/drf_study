[
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "Study",
        "importPath": "drf_study.study.models",
        "description": "drf_study.study.models",
        "isExtraImport": true,
        "detail": "drf_study.study.models",
        "documentation": {}
    },
    {
        "label": "Study",
        "importPath": "drf_study.study.models",
        "description": "drf_study.study.models",
        "isExtraImport": true,
        "detail": "drf_study.study.models",
        "documentation": {}
    },
    {
        "label": "Study",
        "importPath": "drf_study.study.models",
        "description": "drf_study.study.models",
        "isExtraImport": true,
        "detail": "drf_study.study.models",
        "documentation": {}
    },
    {
        "label": "Study",
        "importPath": "drf_study.study.models",
        "description": "drf_study.study.models",
        "isExtraImport": true,
        "detail": "drf_study.study.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "importPath": "drf_study.study.models",
        "description": "drf_study.study.models",
        "isExtraImport": true,
        "detail": "drf_study.study.models",
        "documentation": {}
    },
    {
        "label": "StudySerializer",
        "importPath": "drf_study.study.serializers",
        "description": "drf_study.study.serializers",
        "isExtraImport": true,
        "detail": "drf_study.study.serializers",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Http404",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "drf_study.study.migrations.0001_initial",
        "description": "drf_study.study.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomUser',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "drf_study.study.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "drf_study.study.migrations.0002_study",
        "description": "drf_study.study.migrations.0002_study",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('study', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Study',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('title', models.CharField(max_length=150)),",
        "detail": "drf_study.study.migrations.0002_study",
        "documentation": {}
    },
    {
        "label": "add_study",
        "kind": 2,
        "importPath": "drf_study.study.tests.conftest",
        "description": "drf_study.study.tests.conftest",
        "peekOfCode": "def add_study():\n    def __add_study(title, category, description):\n        study = Study.objects.create(\n            title=title,\n            category=category,\n            description=description,\n        )\n        return study\n    return __add_study",
        "detail": "drf_study.study.tests.conftest",
        "documentation": {}
    },
    {
        "label": "test_study_model",
        "kind": 2,
        "importPath": "drf_study.study.tests.test_study_model",
        "description": "drf_study.study.tests.test_study_model",
        "peekOfCode": "def test_study_model():\n    study = Study(\n       title='Docker',\n       description='muito bom',\n       category='Virtualization'\n    )\n    study.save()\n    assert study.title == 'Docker'\n    assert study.description == 'muito bom'\n    assert study.category == 'Virtualization'",
        "detail": "drf_study.study.tests.test_study_model",
        "documentation": {}
    },
    {
        "label": "test_valid_study_serializer",
        "kind": 2,
        "importPath": "drf_study.study.tests.test_valid_study_serializer",
        "description": "drf_study.study.tests.test_valid_study_serializer",
        "peekOfCode": "def test_valid_study_serializer():\n    valid_serializer_data = {\n        \"title\": \"Python\",\n        \"category\": \"linguagem\",\n        \"description\": \"Pythonicodms\"\n    }\n    serializer = StudySerializer(\n        data=valid_serializer_data\n    )\n    assert serializer.is_valid()",
        "detail": "drf_study.study.tests.test_valid_study_serializer",
        "documentation": {}
    },
    {
        "label": "test_invalid_study_serializer",
        "kind": 2,
        "importPath": "drf_study.study.tests.test_valid_study_serializer",
        "description": "drf_study.study.tests.test_valid_study_serializer",
        "peekOfCode": "def test_invalid_study_serializer():\n    invalid_serializer_data = {\n        \"title\": \"Python\",\n        \"category\": \"linguagem\",\n    }\n    serializer = StudySerializer(\n        data=invalid_serializer_data\n    )\n    serializer = StudySerializer(\n        data=invalid_serializer_data",
        "detail": "drf_study.study.tests.test_valid_study_serializer",
        "documentation": {}
    },
    {
        "label": "test_add_movie",
        "kind": 2,
        "importPath": "drf_study.study.tests.test_views",
        "description": "drf_study.study.tests.test_views",
        "peekOfCode": "def test_add_movie(client):\n    study = Study.objects.all()\n    assert len(study) == 0\n    resp = client.post(reverse(\n        \"api/study\"),\n        {\n            \"title\": \"Pythonico\",\n            \"category\": \"Pythonista\",\n            \"description\": \"Python do sucesso\",\n        },",
        "detail": "drf_study.study.tests.test_views",
        "documentation": {}
    },
    {
        "label": "test_add_invalid_json",
        "kind": 2,
        "importPath": "drf_study.study.tests.test_views",
        "description": "drf_study.study.tests.test_views",
        "peekOfCode": "def test_add_invalid_json(client):\n    study = Study.objects.all()\n    assert len(study) == 0\n    resp = client.post(reverse(\n        \"api/study\"),\n        {},\n        content_type=\"application/json\"\n    )\n    assert resp.status_code == 400\n    study = Study.objects.all()",
        "detail": "drf_study.study.tests.test_views",
        "documentation": {}
    },
    {
        "label": "test_add_invalid_json_keys",
        "kind": 2,
        "importPath": "drf_study.study.tests.test_views",
        "description": "drf_study.study.tests.test_views",
        "peekOfCode": "def test_add_invalid_json_keys(client):\n    study = Study.objects.all()\n    assert len(study) == 0\n    resp = client.post(reverse(\n        \"api/study\"),\n        {\n            \"title\": \"Python\",\n            \"category\": \"loop\"\n            },\n        content_type=\"application/json\"",
        "detail": "drf_study.study.tests.test_views",
        "documentation": {}
    },
    {
        "label": "test_get_single_study",
        "kind": 2,
        "importPath": "drf_study.study.tests.test_views",
        "description": "drf_study.study.tests.test_views",
        "peekOfCode": "def test_get_single_study(client, add_study):\n    study = add_study(\n        title='Docker',\n        category='Virtualization',\n        description=\"comandos mais utilizados\"\n    )\n    resp = client.get(f\"/api/study/{study.id}/\")\n    assert resp.status_code == 200\n    assert resp.data[\"title\"] == \"Docker\"\ndef test_get_single_study_incorrect_id(client):",
        "detail": "drf_study.study.tests.test_views",
        "documentation": {}
    },
    {
        "label": "test_get_single_study_incorrect_id",
        "kind": 2,
        "importPath": "drf_study.study.tests.test_views",
        "description": "drf_study.study.tests.test_views",
        "peekOfCode": "def test_get_single_study_incorrect_id(client):\n    resp = client.get(\"/api/study/buuh/\")\n    assert resp.status_code == 404\n@pytest.mark.django_db\ndef test_get_all_study(client, add_study):\n    study_one = add_study(\n        title='Django',\n        category='Framework',\n        description='Web'\n    )",
        "detail": "drf_study.study.tests.test_views",
        "documentation": {}
    },
    {
        "label": "test_get_all_study",
        "kind": 2,
        "importPath": "drf_study.study.tests.test_views",
        "description": "drf_study.study.tests.test_views",
        "peekOfCode": "def test_get_all_study(client, add_study):\n    study_one = add_study(\n        title='Django',\n        category='Framework',\n        description='Web'\n    )\n    study_two = add_study(\n        \"Django Framework\",\n        'Framework',\n        'Django best framework'",
        "detail": "drf_study.study.tests.test_views",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "kind": 6,
        "importPath": "drf_study.study.admin",
        "description": "drf_study.study.admin",
        "peekOfCode": "class UserAdmin(DefaultUserAdmin):\n    pass\n@admin.register(Study)\nclass StudyAdmin(admin.ModelAdmin):\n    fields = (\n        'title',\n        'category',\n        'description',\n        'created_date',\n        'updated_date'",
        "detail": "drf_study.study.admin",
        "documentation": {}
    },
    {
        "label": "StudyAdmin",
        "kind": 6,
        "importPath": "drf_study.study.admin",
        "description": "drf_study.study.admin",
        "peekOfCode": "class StudyAdmin(admin.ModelAdmin):\n    fields = (\n        'title',\n        'category',\n        'description',\n        'created_date',\n        'updated_date'\n    )\n    list_display = (\n        'title',",
        "detail": "drf_study.study.admin",
        "documentation": {}
    },
    {
        "label": "StudyList",
        "kind": 6,
        "importPath": "drf_study.study.api",
        "description": "drf_study.study.api",
        "peekOfCode": "class StudyList(APIView):\n    def get(self, request, format=None):\n        study = Study.objects.all()\n        serializer = StudySerializer(\n            study, many=True\n        )\n        return Response(\n            serializer.data\n        )\n    def post(self, request, format=None):",
        "detail": "drf_study.study.api",
        "documentation": {}
    },
    {
        "label": "StudyDetail",
        "kind": 6,
        "importPath": "drf_study.study.api",
        "description": "drf_study.study.api",
        "peekOfCode": "class StudyDetail(APIView):\n    def get_object(self, pk):\n        try:\n            return Study.objects.get(pk=pk)\n        except Study.DoesNotExist:\n            raise Http404\n    def get(self, request, pk, format=None):\n        study = self.get_object(pk)\n        serializer = StudySerializer(study)\n        return Response(serializer.data)",
        "detail": "drf_study.study.api",
        "documentation": {}
    },
    {
        "label": "StudyConfig",
        "kind": 6,
        "importPath": "drf_study.study.apps",
        "description": "drf_study.study.apps",
        "peekOfCode": "class StudyConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'drf_study.study'",
        "detail": "drf_study.study.apps",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "drf_study.study.models",
        "description": "drf_study.study.models",
        "peekOfCode": "class CustomUser(AbstractUser):\n    pass\nclass Study(models.Model):\n    title = models.CharField(max_length=150)\n    category = models.CharField(max_length=180)\n    description = models.TextField()\n    created_date = models.DateTimeField(auto_now_add=True)\n    updated_date = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return f\"{self.title}\"",
        "detail": "drf_study.study.models",
        "documentation": {}
    },
    {
        "label": "Study",
        "kind": 6,
        "importPath": "drf_study.study.models",
        "description": "drf_study.study.models",
        "peekOfCode": "class Study(models.Model):\n    title = models.CharField(max_length=150)\n    category = models.CharField(max_length=180)\n    description = models.TextField()\n    created_date = models.DateTimeField(auto_now_add=True)\n    updated_date = models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return f\"{self.title}\"",
        "detail": "drf_study.study.models",
        "documentation": {}
    },
    {
        "label": "StudySerializer",
        "kind": 6,
        "importPath": "drf_study.study.serializers",
        "description": "drf_study.study.serializers",
        "peekOfCode": "class StudySerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Study\n        fields = [\n            'id',\n            'title',\n            'category',\n            'description'\n        ]\n        read_only_fields = (",
        "detail": "drf_study.study.serializers",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "drf_study.study.urls",
        "description": "drf_study.study.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"api/study/\", StudyList.as_view(), name=\"api/study\"),\n    path(\"api/study/<int:pk>/\", StudyDetail.as_view(),\n         name=\"api/study\")\n]",
        "detail": "drf_study.study.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "drf_study.asgi",
        "description": "drf_study.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "drf_study.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.environ.get(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = int(os.environ.get(\"DEBUG\", default=0))\nALLOWED_HOSTS = os.environ.get(\"DJANGO_ALLOWED_HOSTS\").split(\" \")\n# Application definition\nINSTALLED_APPS = [",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "SECRET_KEY = os.environ.get(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = int(os.environ.get(\"DEBUG\", default=0))\nALLOWED_HOSTS = os.environ.get(\"DJANGO_ALLOWED_HOSTS\").split(\" \")\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "DEBUG = int(os.environ.get(\"DEBUG\", default=0))\nALLOWED_HOSTS = os.environ.get(\"DJANGO_ALLOWED_HOSTS\").split(\" \")\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "ALLOWED_HOSTS = os.environ.get(\"DJANGO_ALLOWED_HOSTS\").split(\" \")\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'drf_study.study',\n]",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'drf_study.urls'",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "ROOT_URLCONF = 'drf_study.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "WSGI_APPLICATION = 'drf_study.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": os.environ.get(\"SQL_ENGINE\", \"django.db.backends.sqlite3\"),\n        \"NAME\": os.environ.get(\"SQL_DATABASE\", os.path.join(\n            BASE_DIR, \"db.sqlite3\")\n                               ),\n        \"USER\": os.environ.get(\"SQL_USER\", \"user\"),",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": os.environ.get(\"SQL_ENGINE\", \"django.db.backends.sqlite3\"),\n        \"NAME\": os.environ.get(\"SQL_DATABASE\", os.path.join(\n            BASE_DIR, \"db.sqlite3\")\n                               ),\n        \"USER\": os.environ.get(\"SQL_USER\", \"user\"),\n        \"PASSWORD\": os.environ.get(\"SQL_PASSWORD\", \"password\"),\n        \"HOST\": os.environ.get(\"SQL_HOST\", \"localhost\"),\n        \"PORT\": os.environ.get(\"SQL_PORT\", \"5432\"),",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'study.CustomUser'",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'study.CustomUser'",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'study.CustomUser'",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'study.CustomUser'",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'study.CustomUser'",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "drf_study.settings",
        "description": "drf_study.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'study.CustomUser'",
        "detail": "drf_study.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "drf_study.urls",
        "description": "drf_study.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('drf_study.study.urls')),\n]",
        "detail": "drf_study.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "drf_study.wsgi",
        "description": "drf_study.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "drf_study.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'drf_study.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]